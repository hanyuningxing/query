<?xml version="1.0" encoding="UTF-8"?>  
    <beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"  
        xmlns:context="http://www.springframework.org/schema/context" 
        xmlns:mongo="http://www.springframework.org/schema/data/mongo" 
        xmlns:task="http://www.springframework.org/schema/task"  
        xsi:schemaLocation="  
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
    	<!-- <import resource="classpath*:mongo-config.xml"/> -->
	    <description>Spring配置 </description>
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<value>classpath*:/jdbc.properties</value>
				 
				</list>
			</property>
		</bean>
		<context:annotation-config />
		 <task:annotation-driven />  
	    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
	        <property name="driverClass" value="${jdbc.driver}" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			<property name="user" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<!--连接池中保留的最小连接数。-->
			<property name="minPoolSize" value="30" />
			<!--连接池中保留的最大连接数。Default: 15 -->
			<property name="maxPoolSize" value="100" />
			<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
	        <property name="initialPoolSize" value="50" />
	        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
	        <property name="maxIdleTime" value="20" />
	        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
			<property name="acquireIncrement" value="3" />
			<!-- 隔多少秒检查所有连接池中的空闲连接，默认为0表示不检查； -->
			<property name="idleConnectionTestPeriod"><value>60</value></property>
			<!-- C3P0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能，通过多线程实现多个操作同时被执行。默认为3； -->
			<property name="numHelperThreads"><value>6</value></property>
			<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
			<property name="acquireRetryAttempts"><value>30</value></property>
			<!--设置重新获取连接的次数间隔时间。这个参数默认为1000 -->
			<property name="acquireRetryDelay"><value>1000</value></property>
	        <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
	 		 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
	  		获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->
	        <property name="breakAfterAcquireFailure"><value>false</value></property> 
	    </bean>  
	    
        <!-- 启动自动扫描使用注解方式管理bean的方式打开否则去掉 -->  
        <context:component-scan base-package="com.miracle"/>
       
        
        
        <bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
            <property name="dataSource" ref="dataSource" />  
            <!-- 启动自动扫描pojo 使用注解方式配置pojo使用否则去掉 -->  
            <property name="packagesToScan">
			<list>
			    <value>com.miracle.model</value>
				<value>com.miracle.model.match</value>
				<value>com.miracle.model.ticket</value>
				<value>com.miracle.model.user</value>
				<value>com.miracle.model.lottery.jczq</value>
				<value>com.miracle.model.security</value>
			</list>
			</property> 
            <property name="hibernateProperties">
	            <props>
	                <prop key="current_session_context_class">thread</prop>
	            	<prop key="hibernate.dialect">${hibernate.dialect}</prop>
					<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
					<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
					<prop key="hibernate.order_inserts">${hibernate.order_inserts}</prop>
					<prop key="hibernate.order_updates">${hibernate.order_updates}</prop>
					<!-- 缓存 -->
					<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
					<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
					<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.EhCacheRegionFactory</prop>
					<prop key="net.sf.ehcache.configurationResourceName">${hibernate.ehcache_config_file}</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>
                </props>  
            </property>  
        </bean>  
    
      
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="nestedTransactionAllowed" value="true" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
        <!-- SpringContextHandler初始化 -->
		<bean class="com.miracle.spring.SpringContextHolder" lazy-init="false" /> 
		<bean class="com.miracle.spring.ApplicationContextListener">
	</bean>	
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8">  
                    <property name="maxUploadSize" value="1024000000"/>  
                    <property name="resolveLazily" value="true"/>  
                    <property name="maxInMemorySize" value="4096"/>  
                </bean>
    
    <task:scheduled-tasks scheduler="needFinishScheduler">
		<!-- *(秒0-59) *(分钟0-59) *(小时0-23) *(日期1-31) *(月份1-12或是JAN-DEC) *(星期1-7或是SUN-SAT) -->
		 
		<!-- <task:scheduled ref="continueJobService" method="getPhoneInfo" cron="0 0/10 * * * ?" />
		<task:scheduled ref="grepUserInfoTask" method="getGrepUserInfos" cron="0/5 * * * * ?" />
		
		<task:scheduled ref="grepUserInfoTask" method="getGrepProjectAwardInfos" cron="0/30 * * * * ?" />
		<task:scheduled ref="grepUserInfoTask" method="getProjectAwardWeekInfos" cron="0/10 * * * * ?" />
		<task:scheduled ref="grepUserInfoTask" method="getMatchScore" cron="0/10 * * * * ?" />
		<task:scheduled ref="grepUserInfoTask" method="chooseProjectsToBuy" cron="0/10 * * * * ?" />
		<task:scheduled ref="grepUserInfoTask" method="getGrepProjectInfos" cron="0 0 12 * * ?" /> 
		<task:scheduled ref="grepUserInfoTask" method="getHotUserProjectInfos" cron="0 0/30 * * * ?" /> 
		<task:scheduled ref="grepUserInfoTask" method="getWeekUserInfos" cron="0 30 * * * ?" />
		<task:scheduled ref="grepUserInfoTask" method="getRealMatchChooses" cron="0 0/30 * * * ?" />
		-->
		<task:scheduled ref="grepUserInfoTask" method="getRealMatchChooses" cron="0/10 * * * * ?" />
		
	</task:scheduled-tasks>
	
	<task:scheduler id="needFinishScheduler" pool-size="1" />  	
	
    <import resource="classpath*:mongo-config.xml"/>
    
 	 
</beans>  
    
    